{"version":3,"file":"index.js","sources":["../src/hooks/useForm.js","../src/hooks/usePaginationState.js","../src/hooks/useBuildQueryString.js","../src/hooks/useClipboard.js","../src/hooks/useDualStateController.js","../src/hooks/useProcessing.js"],"sourcesContent":["import * as yup from \"yup\";\nimport React from \"react\";\nconst byString = function (object, accessString) {\n  accessString = accessString.replace(/\\[(\\w+)\\]/g, \".$1\");\n  accessString = accessString.replace(/^\\./, \"\");\n  let accessKeys = accessString.split(\".\");\n  for (let i = 0, n = accessKeys.length; i < n; ++i) {\n    let key = accessKeys[i];\n    if (key in object) {\n      object = object[key];\n    } else {\n      return;\n    }\n  }\n  return object;\n};\nObject.byString = byString;\nconst useForm = (initdataModel, schema) => {\n  const [dataModel, setDataModel] = React.useState(initdataModel);\n  const [validationErrors, setValidationErrors] = React.useState({});\n  const [isBusy, setIsBusy] = React.useState(false);\n  const validate = async () => {\n    const options = { abortEarly: false };\n    const errors = {};\n    try {\n      await schema.validate(dataModel, options);\n      return null;\n    } catch (err) {\n      err.inner.forEach((item) => {\n        errors[item.path] = item.message;\n      });\n      return errors;\n    }\n  };\n  const validateProperty = async (field, value) => {\n    const errors = { ...validationErrors };\n    try {\n      const objSchema = yup.reach(schema, field);\n      await objSchema.validate(value);\n      /**\n       * if reached this block after promise it means validation success.\n       * remove the errors if there is any regarding this field.\n       */\n      delete errors[field];\n    } catch (err) {\n      /**\n       * invalid input detected. update with proper error message on the\n       * respective field.\n       */\n      errors[field] = err.message;\n    } finally {\n      /**\n       * finally we are just setting the erros to state.\n       */\n      setValidationErrors(errors);\n    }\n  };\n  const handleSubmit = async (e, doSubmit, reset = true, options = {}) => {\n    e.preventDefault();\n    const errors = await validate();\n    if (errors) return setValidationErrors(errors);\n    // Form submission logic here ....\n    function submission() {\n      return new Promise(async (resolve, reject) => {\n        try {\n          await doSubmit(dataModel, e);\n          if (reset) resetForm();\n          return resolve();\n        } catch (err) {\n          return reject(err);\n        }\n      });\n    }\n    try {\n      setIsBusy(true);\n      await submission();\n    } catch (err) {\n      console.log(err);\n    }\n    setIsBusy(false);\n  };\n  const handleChange = ({ field, value }) => {\n    const data = { ...dataModel };\n    data[field] = value;\n    setDataModel(data);\n    validateProperty(field, value);\n  };\n  const resetForm = () => {\n    setDataModel(initdataModel);\n    setValidationErrors({});\n  };\n  const _isObject = (object) => object !== null && typeof object === \"object\";\n  const _deepEqual = (referenceObject, testObject) => {\n    const referenceKeys = Object.keys(referenceObject);\n    const testKeys = Object.keys(testObject);\n    if (referenceKeys.length !== testKeys.length) return false;\n    for (const key of referenceKeys) {\n      const referenceValue = referenceObject[key];\n      const testValue = testObject[key];\n      const hasProperties = _isObject(referenceValue);\n      if (!hasProperties && referenceValue !== testValue) return false;\n      if (hasProperties && !_deepEqual(referenceValue, testValue)) return false;\n    }\n    return true;\n  };\n  const hasUnsavedData = () => !_deepEqual(initdataModel, dataModel);\n  const isFormValid = () => Object.keys(validationErrors).length === 0;\n  React.useEffect(() => {\n    console.log(\"datamodel\", dataModel);\n    console.log(\"validation error:\", validationErrors);\n  }, [dataModel, validationErrors]);\n  /** validation runner is required the first time the form renders. */\n  React.useEffect(() => {\n    // (async function () {\n    //   const errors = await validate();\n    //   if (errors) return setValidationErrors(errors);\n    // })();\n  }, []);\n  function initiateDataModel(dataModel) {\n    setDataModel(dataModel);\n  }\n  return {\n    dataModel,\n    validationErrors,\n    isBusy,\n    handleChange,\n    handleSubmit,\n    initiateDataModel,\n    isFormValid,\n    resetForm,\n    hasUnsavedData,\n  };\n};\nexport default useForm;\n","import { useState } from \"react\";\n/**\n * CAUTION: Changing the object strucuture will break the UI if not handled properly.\n * Consult with seniors before making changes.\n */\nconst defaultPaginationState = {\n  currentPage: 1,\n  hasNextPage: false,\n  hasPrevPage: false,\n  nextPage: null,\n  prevPage: null,\n  size: 10,\n  totalPages: 0,\n  totalResults: 0,\n};\nconst usePagination = () => {\n  const [pagination, setPagination] = useState(defaultPaginationState);\n  function updatePaginaion(pagination = defaultPaginationState) {\n    if (typeof pagination.currentPage !== \"number\")\n      throw new Error(\"currentPage must be a number\");\n    if (typeof pagination.hasNextPage !== \"boolean\")\n      throw new Error(\"currentPage must be a number\");\n    if (typeof pagination.hasPrevPage !== \"boolean\")\n      throw new Error(\"hasPrevPage must be a boolean\");\n    if (typeof pagination.nextPage !== \"number\" && pagination.nextPage !== null)\n      throw new Error(\"nextPage must be a number or null\");\n    if (typeof pagination.prevPage !== \"number\" && pagination.prevPage !== null)\n      throw new Error(\"prevPage must be a number or null\");\n    if (typeof pagination.size !== \"number\")\n      throw new Error(\"size must be a number\");\n    if (typeof pagination.totalPages !== \"number\")\n      throw new Error(\"totalPages must be a number\");\n    if (typeof pagination.totalResults !== \"number\")\n      throw new Error(\"totalResults must be a number\");\n    setPagination(pagination);\n  }\n  return {\n    pagination,\n    updatePaginaion,\n  };\n};\n\nexport default usePagination;\n","import React from \"react\";\n\nfunction useBuildQueryString(initial) {\n  const initialQueryState = {\n    required: _buildDefault(initial).required,\n    filter: _buildDefault(initial).filter,\n    search: _buildDefault(initial).search,\n    pagination: _buildDefault(initial).pagination,\n  };\n\n  const initialToolState = {\n    filter: (initial && initial.filter) || {},\n    required: (initial && initial.required) || {},\n    search: (initial && initial.search) || {},\n    pagination: (initial && initial.pagination) || {\n      page: 1,\n      size: 10,\n    },\n  };\n\n  let [query, setQuery] = React.useState(initialQueryState);\n  let [toolState, setToolState] = React.useState(initialToolState);\n\n  function fullReset() {\n    setQuery(initialQueryState);\n    setToolState(initialToolState);\n  }\n\n  function _buildDefault(initial) {\n    return {\n      required:\n        initial && initial.required\n          ? objectToQuery(initial.required.value)\n          : \"\",\n      filter:\n        initial && initial.filter ? objectToQuery(initial.filter.value) : \"\",\n      search:\n        initial && initial.search ? objectToQuery(initial.search.value) : \"\",\n      pagination:\n        initial && initial.pagination\n          ? objectToQuery(initial.pagination)\n          : objectToQuery({\n              page: 1,\n              size: 10,\n            }),\n    };\n  }\n\n  function isObject(object) {\n    return object !== null && typeof object === \"object\";\n  }\n  function objectToQuery(object) {\n    if (!object) return \"\";\n    const queryBucket = [];\n    function dig(obj, build = \"\") {\n      if (!isObject(obj))\n        return queryBucket.push(build + `=${encodeURIComponent(obj)}`);\n      const keys = Object.keys(obj);\n      for (let key of keys) {\n        if (isObject(obj)) {\n          let attach = !build\n            ? `${key}`\n            : !Array.isArray(obj)\n            ? `[${key}]`\n            : `[]`;\n          dig(obj[key], build + attach);\n        }\n      }\n      return obj;\n    }\n    dig(object);\n    return queryBucket.join(\"&\");\n  }\n  let formatString = (str) => (str ? \"&\" + str : str);\n  // getQuery function will soon be deprecated. it's renamed to getQueryString\n  function getQuery() {\n    let processedString = \"\";\n    let keys = Object.keys(query);\n    for (let key of keys) {\n      processedString = processedString\n        ? processedString + formatString(query[key])\n        : query[key];\n    }\n    return processedString;\n  }\n  function getQueryString() {\n    return getQuery();\n  }\n  function handleRequired(requiredQuery) {\n    setQuery((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        required: objectToQuery(requiredQuery.value),\n        pagination: objectToQuery({\n          page: 1,\n          size: toolState?.pagination?.size,\n        }),\n      };\n    });\n    _updateRequired(requiredQuery);\n    _updatePagination({ page: 1, size: 10 });\n  }\n  function handleFilter(filterQuery) {\n    setQuery((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        filter: objectToQuery(filterQuery.value),\n        pagination: objectToQuery({\n          page: 1,\n          size: toolState?.pagination?.size,\n        }),\n      };\n    });\n    _updateFilter(filterQuery);\n    _updatePagination({ page: 1, size: toolState?.pagination?.size });\n  }\n  function handlePagination(page = 1, size = 10) {\n    setQuery((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        pagination: objectToQuery({ page, size }),\n      };\n    });\n    _updatePagination({\n      page,\n      size,\n    });\n  }\n  function handleSearch(searchQuery) {\n    setQuery((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        search: objectToQuery(searchQuery.value),\n        pagination: objectToQuery({\n          page: 1,\n          size: toolState?.pagination?.size,\n        }),\n      };\n    });\n    _updateSearch(searchQuery);\n    _updatePagination({ page: 1, size: toolState?.pagination?.size });\n  }\n  function _updatePagination(pagination) {\n    setToolState((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        pagination,\n      };\n    });\n  }\n  function _updateFilter(filter) {\n    setToolState((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        filter,\n      };\n    });\n  }\n  function _updateRequired(required) {\n    setToolState((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        required,\n      };\n    });\n  }\n  function _updateSearch(search) {\n    setToolState((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        search,\n      };\n    });\n  }\n  return {\n    query,\n    toolState,\n    fullReset,\n    getQuery,\n    getQueryString,\n    handleFilter,\n    handlePagination,\n    handleSearch,\n    handleRequired,\n  };\n}\n\nexport default useBuildQueryString;\n","import React from \"react\";\nconst SUCCESS_TIMEOUT = 2500;\nconst useClipboard = () => {\n  const [copySuccess, setCopySuccess] = React.useState(false);\n  const contentElementReference = React.useRef(null);\n  async function copyFormatedToClipboard() {\n    if (contentElementReference.current) {\n      /** create a range to select contents that will be copied. */\n      // const range = document.createRange();\n      // range.selectNodeContents(contentElementReference.current);\n      /** copy the contents to clipboard. */\n      if (navigator.clipboard) {\n        try {\n          await navigator.clipboard.write([\n            new ClipboardItem({\n              \"text/html\": new Blob(\n                [contentElementReference.current.innerHTML],\n                {\n                  type: \"text/html\",\n                }\n              ),\n            }),\n          ]);\n          setCopySuccess(true);\n          console.log(\"Contentns copied.\");\n        } catch (err) {\n          console.log(\"Error copying to clipboard.\");\n          console.log(err);\n        }\n        setTimeout(() => setCopySuccess(false), SUCCESS_TIMEOUT);\n      }\n    }\n  }\n  async function copyPlainTextToClipBoard(value, cb = () => {}) {\n    if (navigator.clipboard) {\n      setCopySuccess(true);\n      await navigator.clipboard.writeText(value);\n      setTimeout(() => setCopySuccess(false), SUCCESS_TIMEOUT);\n    }\n  }\n  return {\n    contentElementReference,\n    copySuccess,\n    copyFormatedToClipboard,\n    copyPlainTextToClipBoard,\n  };\n};\n\nexport default useClipboard;\n","import React from \"react\";\n\nconst useDualStateController = () => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const toggle = () => {\n    setIsOpen((isOpen) => !isOpen);\n  };\n  return {\n    isOpen,\n    toggle,\n  };\n};\n\nexport default useDualStateController;\n","import React from \"react\";\n\nconst useProcessing = (initializers) => {\n  let initState = {};\n  initializers.forEach((process) => {\n    initState[process.action] = { status: process.status, id: null };\n  });\n  let [processing, setProcessing] = React.useState(initState);\n  let dispatch = (state) => {\n    setProcessing((currentProcesses) => {\n      let key = Object.keys(state)[0];\n      let value = Object.values(state)[0];\n      let updatedProcesses = { ...currentProcesses };\n      updatedProcesses[key] = value;\n      return updatedProcesses;\n    });\n  };\n  return {\n    processing,\n    dispatch,\n  };\n};\n\nexport default useProcessing;\n"],"names":["_catch","body","recover","result","e","then","Object","byString","object","accessString","accessKeys","replace","split","i","n","length","key","defaultPaginationState","currentPage","hasNextPage","hasPrevPage","nextPage","prevPage","size","totalPages","totalResults","initial","initialQueryState","required","_buildDefault","filter","search","pagination","initialToolState","page","query","setQuery","React","useState","toolState","setToolState","objectToQuery","value","isObject","queryBucket","dig","obj","build","push","encodeURIComponent","keys","attach","Array","isArray","join","getQuery","processedString","str","_updatePagination","prevState","JSON","parse","stringify","fullReset","getQueryString","handleFilter","filterQuery","_toolState$pagination3","_toolState$pagination2","handlePagination","handleSearch","searchQuery","_toolState$pagination5","_toolState$pagination4","handleRequired","requiredQuery","_toolState$pagination","useClipboard","copySuccess","setCopySuccess","contentElementReference","useRef","copyFormatedToClipboard","_temp4","current","_temp3","navigator","clipboard","_temp2","setTimeout","_temp","Promise","resolve","write","ClipboardItem","Blob","innerHTML","type","console","log","err","reject","copyPlainTextToClipBoard","cb","_temp5","writeText","useDualStateController","isOpen","setIsOpen","toggle","useForm","initdataModel","schema","dataModel","setDataModel","validationErrors","setValidationErrors","isBusy","setIsBusy","resetForm","_deepEqual","referenceObject","testObject","referenceKeys","testKeys","referenceValue","testValue","hasProperties","useEffect","handleChange","_ref","field","data","validateProperty","errors","finalizer","objSchema","yup","reach","validate","message","bind","_finallyRethrows","_wasThrown","_result","handleSubmit","doSubmit","reset","options","preventDefault","abortEarly","inner","forEach","item","path","initiateDataModel","isFormValid","hasUnsavedData","usePagination","setPagination","updatePaginaion","Error","initializers","initState","process","action","status","id","processing","setProcessing","dispatch","state","currentProcesses","values","updatedProcesses"],"mappings":"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"}