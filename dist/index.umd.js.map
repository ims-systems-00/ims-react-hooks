{"version":3,"file":"index.umd.js","sources":["../src/hooks/useForm.js","../src/hooks/usePaginationState.js","../src/hooks/useClipboard.js","../src/hooks/useDualStateController.js","../src/hooks/useProcessing.js","../src/hooks/useQuery.js"],"sourcesContent":["import * as yup from \"yup\";\nimport React from \"react\";\nconst byString = function (object, accessString) {\n  accessString = accessString.replace(/\\[(\\w+)\\]/g, \".$1\");\n  accessString = accessString.replace(/^\\./, \"\");\n  let accessKeys = accessString.split(\".\");\n  for (let i = 0, n = accessKeys.length; i < n; ++i) {\n    let key = accessKeys[i];\n    if (key in object) {\n      object = object[key];\n    } else {\n      return;\n    }\n  }\n  return object;\n};\nObject.byString = byString;\nconst useForm = (initdataModel, schema) => {\n  const [dataModel, setDataModel] = React.useState(initdataModel);\n  const [validationErrors, setValidationErrors] = React.useState({});\n  const [isBusy, setIsBusy] = React.useState(false);\n  const validate = async () => {\n    const options = { abortEarly: false };\n    const errors = {};\n    try {\n      await schema.validate(dataModel, options);\n      return null;\n    } catch (err) {\n      err.inner.forEach((item) => {\n        errors[item.path] = item.message;\n      });\n      return errors;\n    }\n  };\n  const validateProperty = async (field, value) => {\n    const errors = { ...validationErrors };\n    try {\n      const objSchema = yup.reach(schema, field);\n      await objSchema.validate(value);\n      /**\n       * if reached this block after promise it means validation success.\n       * remove the errors if there is any regarding this field.\n       */\n      delete errors[field];\n    } catch (err) {\n      /**\n       * invalid input detected. update with proper error message on the\n       * respective field.\n       */\n      errors[field] = err.message;\n    } finally {\n      /**\n       * finally we are just setting the erros to state.\n       */\n      setValidationErrors(errors);\n    }\n  };\n  const handleSubmit = async (e, doSubmit, reset = true, options = {}) => {\n    e.preventDefault();\n    const errors = await validate();\n    if (errors) return setValidationErrors(errors);\n    // Form submission logic here ....\n    function submission() {\n      return new Promise(async (resolve, reject) => {\n        try {\n          await doSubmit(dataModel, e);\n          if (reset) resetForm();\n          return resolve();\n        } catch (err) {\n          return reject(err);\n        }\n      });\n    }\n    try {\n      setIsBusy(true);\n      await submission();\n    } catch (err) {\n      console.log(err);\n    }\n    setIsBusy(false);\n  };\n  const handleChange = ({ field, value }) => {\n    const data = { ...dataModel };\n    data[field] = value;\n    setDataModel(data);\n    validateProperty(field, value);\n  };\n  const resetForm = () => {\n    setDataModel(initdataModel);\n    setValidationErrors({});\n  };\n  const _isObject = (object) => object !== null && typeof object === \"object\";\n  const _deepEqual = (referenceObject, testObject) => {\n    const referenceKeys = Object.keys(referenceObject);\n    const testKeys = Object.keys(testObject);\n    if (referenceKeys.length !== testKeys.length) return false;\n    for (const key of referenceKeys) {\n      const referenceValue = referenceObject[key];\n      const testValue = testObject[key];\n      const hasProperties = _isObject(referenceValue);\n      if (!hasProperties && referenceValue !== testValue) return false;\n      if (hasProperties && !_deepEqual(referenceValue, testValue)) return false;\n    }\n    return true;\n  };\n  const hasUnsavedData = () => !_deepEqual(initdataModel, dataModel);\n  const isFormValid = () => Object.keys(validationErrors).length === 0;\n  React.useEffect(() => {\n    console.log(\"datamodel\", dataModel);\n    console.log(\"validation error:\", validationErrors);\n  }, [dataModel, validationErrors]);\n  /** validation runner is required the first time the form renders. */\n  React.useEffect(() => {\n    // (async function () {\n    //   const errors = await validate();\n    //   if (errors) return setValidationErrors(errors);\n    // })();\n  }, []);\n  function initiateDataModel(dataModel) {\n    setDataModel(dataModel);\n  }\n  return {\n    dataModel,\n    validationErrors,\n    isBusy,\n    handleChange,\n    handleSubmit,\n    initiateDataModel,\n    isFormValid,\n    resetForm,\n    hasUnsavedData,\n  };\n};\nexport default useForm;\n","import { useState } from \"react\";\n/**\n * CAUTION: Changing the object strucuture will break the UI if not handled properly.\n * Consult with seniors before making changes.\n */\nconst defaultPaginationState = {\n  currentPage: 1,\n  hasNextPage: false,\n  hasPrevPage: false,\n  nextPage: null,\n  prevPage: null,\n  size: 10,\n  totalPages: 0,\n  totalResults: 0,\n};\nconst usePagination = () => {\n  const [pagination, setPagination] = useState(defaultPaginationState);\n  function updatePaginaion(pagination = defaultPaginationState) {\n    if (typeof pagination.currentPage !== \"number\")\n      throw new Error(\"currentPage must be a number\");\n    if (typeof pagination.hasNextPage !== \"boolean\")\n      throw new Error(\"currentPage must be a number\");\n    if (typeof pagination.hasPrevPage !== \"boolean\")\n      throw new Error(\"hasPrevPage must be a boolean\");\n    if (typeof pagination.nextPage !== \"number\" && pagination.nextPage !== null)\n      throw new Error(\"nextPage must be a number or null\");\n    if (typeof pagination.prevPage !== \"number\" && pagination.prevPage !== null)\n      throw new Error(\"prevPage must be a number or null\");\n    if (typeof pagination.size !== \"number\")\n      throw new Error(\"size must be a number\");\n    if (typeof pagination.totalPages !== \"number\")\n      throw new Error(\"totalPages must be a number\");\n    if (typeof pagination.totalResults !== \"number\")\n      throw new Error(\"totalResults must be a number\");\n    setPagination(pagination);\n  }\n  return {\n    pagination,\n    updatePaginaion,\n  };\n};\n\nexport default usePagination;\n","import React from \"react\";\nconst SUCCESS_TIMEOUT = 2500;\nconst useClipboard = () => {\n  const [copySuccess, setCopySuccess] = React.useState(false);\n  const contentElementReference = React.useRef(null);\n  async function copyFormatedToClipboard() {\n    if (contentElementReference.current) {\n      /** create a range to select contents that will be copied. */\n      // const range = document.createRange();\n      // range.selectNodeContents(contentElementReference.current);\n      /** copy the contents to clipboard. */\n      if (navigator.clipboard) {\n        try {\n          await navigator.clipboard.write([\n            new ClipboardItem({\n              \"text/html\": new Blob(\n                [contentElementReference.current.innerHTML],\n                {\n                  type: \"text/html\",\n                }\n              ),\n            }),\n          ]);\n          setCopySuccess(true);\n          console.log(\"Contentns copied.\");\n        } catch (err) {\n          console.log(\"Error copying to clipboard.\");\n          console.log(err);\n        }\n        setTimeout(() => setCopySuccess(false), SUCCESS_TIMEOUT);\n      }\n    }\n  }\n  async function copyPlainTextToClipBoard(value, cb = () => {}) {\n    if (navigator.clipboard) {\n      setCopySuccess(true);\n      await navigator.clipboard.writeText(value);\n      setTimeout(() => setCopySuccess(false), SUCCESS_TIMEOUT);\n    }\n  }\n  return {\n    contentElementReference,\n    copySuccess,\n    copyFormatedToClipboard,\n    copyPlainTextToClipBoard,\n  };\n};\n\nexport default useClipboard;\n","import React from \"react\";\n\nconst useDualStateController = () => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const toggle = () => {\n    setIsOpen((isOpen) => !isOpen);\n  };\n  return {\n    isOpen,\n    toggle,\n  };\n};\n\nexport default useDualStateController;\n","import React from \"react\";\n\nconst useProcessing = (initializers) => {\n  let initState = {};\n  initializers.forEach((process) => {\n    initState[process.action] = { status: process.status, id: null };\n  });\n  let [processing, setProcessing] = React.useState(initState);\n  let dispatch = (state) => {\n    setProcessing((currentProcesses) => {\n      let key = Object.keys(state)[0];\n      let value = Object.values(state)[0];\n      let updatedProcesses = { ...currentProcesses };\n      updatedProcesses[key] = value;\n      return updatedProcesses;\n    });\n  };\n  return {\n    processing,\n    dispatch,\n  };\n};\n\nexport default useProcessing;\n","import React from \"react\";\n\nfunction useQuery(initial) {\n  const initialQueryState = {\n    required: _buildDefault(initial).required,\n    filter: _buildDefault(initial).filter,\n    search: _buildDefault(initial).search,\n    pagination: _buildDefault(initial).pagination,\n  };\n\n  const initialToolState = {\n    filter: (initial && initial.filter) || {},\n    required: (initial && initial.required) || {},\n    search: \"\",\n    pagination: (initial && initial.pagination) || {\n      page: 1,\n      size: 10,\n    },\n  };\n\n  let [query, setQuery] = React.useState(initialQueryState);\n  let [toolState, setToolState] = React.useState(initialQueryState);\n\n  function fullReset() {\n    setQuery(initialQueryState);\n    setToolState(initialToolState);\n  }\n\n  function _buildDefault(initial) {\n    return {\n      required:\n        initial && initial.required\n          ? objectToQuery(initial.required.value)\n          : \"\",\n      filter:\n        initial && initial.filter ? objectToQuery(initial.filter.value) : \"\",\n      search:\n        initial && initial.search ? objectToQuery(initial.search.value) : \"\",\n      pagination:\n        initial && initial.pagination\n          ? objectToQuery(initial.pagination.value)\n          : \"page=1&size=10\",\n    };\n  }\n\n  function isObject(object) {\n    return object !== null && typeof object === \"object\";\n  }\n  function objectToQuery(object) {\n    if (!object) return \"\";\n    const queryBucket = [];\n    function dig(obj, build = \"\") {\n      if (!isObject(obj))\n        return queryBucket.push(build + `=${encodeURIComponent(obj)}`);\n      const keys = Object.keys(obj);\n      for (let key of keys) {\n        if (isObject(obj)) {\n          let attach = !build\n            ? `${key}`\n            : !Array.isArray(obj)\n            ? `[${key}]`\n            : `[]`;\n          dig(obj[key], build + attach);\n        }\n      }\n      return obj;\n    }\n    dig(object);\n    return queryBucket.join(\"&\");\n  }\n  let formatString = (str) => (str ? \"&\" + str : str);\n  // getQuery function will soon be deprecated. it's renamed to getQueryString\n  function getQuery() {\n    let processedString = \"\";\n    let keys = Object.keys(query);\n    for (let key of keys) {\n      processedString = processedString\n        ? processedString + formatString(query[key])\n        : query[key];\n    }\n    return processedString;\n  }\n  function getQueryString() {\n    return getQuery();\n  }\n  function handleRequired(requiredQuery) {\n    setQuery((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        required: objectToQuery(requiredQuery.value),\n        pagination: \"page=1\",\n      };\n    });\n    _updateRequired(requiredQuery);\n    _updatePagination({ page: 1, size: 10 });\n  }\n  function handleFilter(filterQuery) {\n    setQuery((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        filter: objectToQuery(filterQuery.value),\n        pagination: \"page=1\",\n      };\n    });\n    _updateFilter(filterQuery);\n    _updatePagination({ page: 1, size: 10 });\n  }\n  function handlePagination(page = 1, size = 10) {\n    setQuery((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        pagination: objectToQuery({ page, size }),\n      };\n    });\n    _updatePagination({\n      page,\n      size,\n    });\n  }\n  function handleSearch(searchQuery) {\n    setQuery((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        search: objectToQuery(searchQuery.value),\n        pagination: \"page=1\",\n      };\n    });\n    _updatePagination({ page: 1, size: 10 });\n  }\n  function _updatePagination(pagination) {\n    setToolState((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        pagination,\n      };\n    });\n  }\n  function _updateFilter(filter) {\n    setToolState((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        filter,\n      };\n    });\n  }\n  function _updateRequired(required) {\n    setToolState((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        required,\n      };\n    });\n  }\n  function _updateSearch() {}\n  return {\n    query,\n    toolState,\n    fullReset,\n    getQuery,\n    getQueryString,\n    handleFilter,\n    handlePagination,\n    handleSearch,\n    handleRequired,\n  };\n}\n\nexport default useQuery;\n"],"names":["_catch","body","recover","result","e","then","Object","byString","object","accessString","accessKeys","replace","split","i","n","length","key","defaultPaginationState","currentPage","hasNextPage","hasPrevPage","nextPage","prevPage","size","totalPages","totalResults","useClipboard","copySuccess","setCopySuccess","React","useState","contentElementReference","useRef","copyFormatedToClipboard","_temp4","current","_temp3","navigator","clipboard","_temp2","setTimeout","_temp","Promise","resolve","write","ClipboardItem","Blob","innerHTML","type","console","log","err","reject","copyPlainTextToClipBoard","value","cb","_temp5","writeText","useDualStateController","isOpen","setIsOpen","toggle","useForm","initdataModel","schema","dataModel","setDataModel","validationErrors","setValidationErrors","isBusy","setIsBusy","resetForm","_deepEqual","referenceObject","testObject","referenceKeys","keys","testKeys","referenceValue","testValue","hasProperties","useEffect","handleChange","_ref","field","data","validateProperty","errors","finalizer","objSchema","yup","reach","validate","message","bind","_finallyRethrows","_wasThrown","_result","handleSubmit","doSubmit","reset","options","preventDefault","abortEarly","inner","forEach","item","path","initiateDataModel","isFormValid","hasUnsavedData","usePagination","pagination","setPagination","updatePaginaion","Error","initializers","initState","process","action","status","id","processing","setProcessing","dispatch","state","currentProcesses","values","updatedProcesses","initial","initialQueryState","required","_buildDefault","filter","search","initialToolState","page","query","setQuery","toolState","setToolState","objectToQuery","isObject","queryBucket","dig","obj","build","push","encodeURIComponent","attach","Array","isArray","join","getQuery","processedString","str","_updatePagination","prevState","JSON","parse","stringify","fullReset","getQueryString","handleFilter","filterQuery","handlePagination","handleSearch","searchQuery","handleRequired","requiredQuery"],"mappings":"yqBAkjBO,SAASA,EAAOC,EAAMC,GAC5B,IACC,IAAIC,EAASF,GACd,CAAE,MAAMG,GACP,OAAOF,EAAQE,EAChB,CACA,OAAID,GAAUA,EAAOE,KACbF,EAAOE,UAAK,EAAQH,GAErBC,CACR,CA5iBAG,OAAOC,SAdU,SAAUC,EAAQC,GAGjC,IAAIC,GADJD,GADAA,EAAeA,EAAaE,QAAQ,aAAc,QACtBA,QAAQ,MAAO,KACbC,MAAM,KACpC,IAAK,IAAIC,EAAI,EAAGC,EAAIJ,EAAWK,OAAQF,EAAIC,IAAKD,EAAG,CACjD,IAAIG,EAAMN,EAAWG,GACrB,KAAIG,KAAOR,GAGT,OAFAA,EAASA,EAAOQ,EAIpB,CACA,OAAOR,CACT,EAEM,MCZAS,EAAyB,CAC7BC,YAAa,EACbC,aAAa,EACbC,aAAa,EACbC,SAAU,KACVC,SAAU,KACVC,KAAM,GACNC,WAAY,EACZC,aAAc,kBCXKC,KAAM,MAClBC,EAAaC,GAAkBC,EAAK,QAACC,UAAS,GAC/CC,EAA0BF,EAAAA,QAAMG,OAAO,MAoC7C,MAAO,CACLD,0BACAJ,cACAM,wBAtCoC,WAAG,IAAA,MAAAC,EACnCH,WAAAA,GAAAA,EAAwBI,QAAO,CAAA,MAAAC,EAK7BC,WAAAA,GAAAA,UAAUC,UAAS,CAAA,SAAAC,IAkBrBC,WAAW,IAAMZ,GAAe,GA5BhB,KA4ByC,CAAAa,MAAAA,EAqhB1D,SAAgBxC,EAAMC,GAC5B,IACC,IAAIC,EAxiBMuC,QAAAC,QACIN,UAAUC,UAAUM,MAAM,CAC9B,IAAIC,cAAc,CAChB,YAAa,IAAIC,KACf,CAACf,EAAwBI,QAAQY,WACjC,CACEC,KAAM,mBAIZ3C,KAAA,WACFuB,GAAe,GACfqB,QAAQC,IAAI,oBAAqB,EA6hB1C,CAAE,MAAM9C,GACP,OAAOF,EAAQE,EAChB,CACA,OAAID,GAAUA,EAAOE,KACbF,EAAOE,UAAK,EAAQH,GAErBC,CACR,CA/hBiEH,CAAA,WAJhDmD,GACPF,QAAQC,IAAI,+BACZD,QAAQC,IAAIC,EACd,UAACV,GAAAA,EAAApC,KAAAoC,EAAApC,KAAAkC,GAAAA,KAjBCF,MAiBDD,GAAAA,EAAA/B,YAAA+B,EAAA/B,KAAA,WAAA,EAAA,CAAA,CAtBD0B,GAsBC,OAAAW,QAAAC,QAAAT,GAAAA,EAAA7B,KAAA6B,EAAA7B,KAAA,WAAA,QAAA,EAIP,CAAC,MAAAD,UAAAsC,QAAAU,OAAAhD,EA7BD,CAAA,EAyCEiD,yBAXqC,SAACC,EAAOC,GAAa,UAAEC,EAAA,WAAA,GACxDnB,UAAUC,UACS,OAArBV,GAAe,GAAMc,QAAAC,QACfN,UAAUC,UAAUmB,UAAUH,IAAMjD,KAAA,WAC1CmC,WAAW,IAAMZ,GAAe,GApCd,KAoCuC,EAAA,CAJC,GAID,OAAAc,QAAAC,QAAAa,GAAAA,EAAAnD,KAAAmD,EAAAnD,KAAA,mBAAA,EAE7D,CAAC,MAAAD,GAAAsC,OAAAA,QAAAU,OAAAhD,EAlCc,CAAA,EAwCf,2BC3C6BsD,KAC7B,MAAOC,EAAQC,GAAa/B,EAAK,QAACC,UAAS,GAI3C,MAAO,CACL6B,SACAE,OALaA,KACbD,EAAWD,IAAYA,EAAM,EAK/B,YHOcG,CAACC,EAAeC,KAC9B,MAAOC,EAAWC,GAAgBrC,EAAK,QAACC,SAASiC,IAC1CI,EAAkBC,GAAuBvC,EAAK,QAACC,SAAS,CAAE,IAC1DuC,EAAQC,GAAazC,EAAAA,QAAMC,UAAS,GAmErCyC,EAAYA,KAChBL,EAAaH,GACbK,EAAoB,CAAA,EACtB,EAEMI,EAAaA,CAACC,EAAiBC,KACnC,MAAMC,EAAgBrE,OAAOsE,KAAKH,GAC5BI,EAAWvE,OAAOsE,KAAKF,GAC7B,GAAIC,EAAc5D,SAAW8D,EAAS9D,OAAQ,OAAO,EACrD,IAAK,MAAMC,KAAO2D,EAAe,CAC/B,MAAMG,EAAiBL,EAAgBzD,GACjC+D,EAAYL,EAAW1D,GACvBgE,EAR+B,QAAtBxE,EAQiBsE,IAR+B,iBAAXtE,EASpD,IAAKwE,GAAiBF,IAAmBC,EAAW,OAAY,EAChE,GAAIC,IAAkBR,EAAWM,EAAgBC,GAAY,OAAO,CACtE,CAXiBvE,MAYjB,OACF,GAiBA,OAdAqB,EAAAA,QAAMoD,UAAU,KACdhC,QAAQC,IAAI,YAAae,GACzBhB,QAAQC,IAAI,oBAAqBiB,EACnC,EAAG,CAACF,EAAWE,IAEftC,EAAK,QAACoD,UAAU,OAKb,IAII,CACLhB,YACAE,mBACAE,SACAa,aA5CmBC,IAAsB,IAArBC,MAAEA,EAAK9B,MAAEA,GAAO6B,EACpC,MAAME,EAAO,IAAKpB,GAClBoB,EAAKD,GAAS9B,EACdY,EAAamB,GAlDOC,SAAUF,EAAO9B,GAAK,IAC1C,MAAMiC,EAAS,IAAKpB,GAAmB1B,EA4hBpC,SAA0BxC,EAAMuF,GACtC,IACC,IAAIrF,EA9hBqCH,EACnC,WACF,MAAMyF,EAAYC,EAAIC,MAAM3B,EAAQoB,GAAO,OAAA1C,QAAAC,QACrC8C,EAAUG,SAAStC,IAAMjD,KAAA,kBAKxBkF,EAAOH,EAAO,EACvB,EAASjC,SAAAA,GAKPoC,EAAOH,GAASjC,EAAI0C,OACtB,EAghBH,CAAE,MAAOzF,GACR,OAAOoF,GAAU,EAAMpF,EACxB,CACA,OAAID,GAAUA,EAAOE,KACbF,EAAOE,KAAKmF,EAAUM,KAAK,MAAM,GAAQN,EAAUM,KAAK,MAAM,IAE/DN,GAAU,EAAOrF,EACzB,CAtiB2C4F,CAAA/F,EAetC,SAAAgG,EAAAC,GAI6B,GAA5B7B,EAAoBmB,GAAQS,EAAA,MAAAC,EAAA,OAAAA,CAAA,GAAA,OAAAvD,QAAAC,QAAAF,GAAAA,EAAApC,KAAAoC,EAAApC,KAAA,WAAA,QAAA,EAEhC,CAAC,MAAAD,GAAA,OAAAsC,QAAAU,OAAAhD,EACD,CAAA,CA4BEkF,CAAiBF,EAAO9B,EAC1B,EAwCE4C,aArEgBA,SAAU9F,EAAG+F,EAAUC,EAAcC,QAAT,IAALD,IAAAA,GAAQ,GAAuB,IACnD,OAAnBhG,EAAEkG,iBAAiB5D,QAAAC,QArCPiD,WAAe,IAC3B,MAAMS,EAAU,CAAEE,YAAY,GACxBhB,EAAS,CAAA,EAAG,OAAA7C,QAAAC,QAAA3C,EACd,WAAA,OAAA0C,QAAAC,QACIqB,EAAO4B,SAAS3B,EAAWoC,IAAQhG,KACzC,WAAA,OAAY,IAAA,EACd,EAAC,SAAQ8C,GAIP,OAHAA,EAAIqD,MAAMC,QAASC,IACjBnB,EAAOmB,EAAKC,MAAQD,EAAKb,OAC3B,GACON,CACT,GACF,CAAC,MAAAnF,GAAAsC,OAAAA,QAAAU,OAAAhD,EACD,CAAA,CAyBuBwF,IAAUvF,KAAA,SAAzBkF,GAAM,SAAAnD,IAoBZkC,GAAU,EAAO,CAnBjB,GAAIiB,EAAQ,OAAOnB,EAAoBmB,GAAQ,MAAAhD,EAAAvC,EAa3C,WACc,OAAhBsE,GAAU,GAAM5B,QAAAC,QAXT,IAAID,QAAeC,SAAAA,EAASS,GAAW,IAAA,OAAAV,QAAAC,QAAA3C,EAAA,WACxC0C,OAAAA,QAAAC,QACIwD,EAASlC,EAAW7D,IAAEC,KAAA,WAE5B,OADI+F,GAAO7B,IACJ5B,GAAU,EACnB,EAASQ,SAAAA,GACP,OAAOC,EAAOD,EAChB,GACF,CAAC,MAAA/C,GAAA,OAAAsC,QAAAU,OAAAhD,EACH,CAAA,IAGoBC,KACpB,WAAA,EAAA,EAAS8C,SAAAA,GACPF,QAAQC,IAAIC,EACd,GAAC,OAAAZ,GAAAA,EAAAlC,KAAAkC,EAAAlC,KAAA+B,GAAAA,GAEH,EAAA,CAAC,MAAAhC,GAAAsC,OAAAA,QAAAU,OAAAhD,EACD,CAAA,EA8CEwG,kBATF,SAA2B3C,GACzBC,EAAaD,EACf,EAQE4C,YAtBkBA,IAA+C,IAAzCvG,OAAOsE,KAAKT,GAAkBpD,OAuBtDwD,YACAuC,eAzBqBA,KAAOtC,EAAWT,EAAeE,GA0BxD,uBCpHoB8C,KACpB,MAAOC,EAAYC,GAAiBnF,EAAQA,SAACb,GAoB7C,MAAO,CACL+F,aACAE,gBArBF,SAAyBF,GACvB,QADuBA,IAAAA,IAAAA,EAAa/F,GACE,iBAA3B+F,EAAW9F,YACpB,MAAU,IAAAiG,MAAM,gCAClB,GAAsC,kBAA3BH,EAAW7F,YACpB,MAAU,IAAAgG,MAAM,gCAClB,GAAsC,kBAA3BH,EAAW5F,YACpB,UAAU+F,MAAM,iCAClB,GAAmC,iBAAxBH,EAAW3F,UAAiD,OAAxB2F,EAAW3F,SACxD,MAAM,IAAI8F,MAAM,qCAClB,GAAmC,iBAAxBH,EAAW1F,UAAiD,OAAxB0F,EAAW1F,SACxD,MAAU,IAAA6F,MAAM,qCAClB,GAA+B,iBAApBH,EAAWzF,KACpB,MAAU,IAAA4F,MAAM,yBAClB,GAAqC,iBAA1BH,EAAWxF,WACpB,MAAU,IAAA2F,MAAM,+BAClB,GAAuC,iBAA5BH,EAAWvF,aACpB,MAAU,IAAA0F,MAAM,iCAClBF,EAAcD,EAChB,EAIA,kBGrCqBI,IACrB,IAAIC,EAAY,CAAE,EAClBD,EAAaX,QAASa,IACpBD,EAAUC,EAAQC,QAAU,CAAEC,OAAQF,EAAQE,OAAQC,GAAI,KAC5D,GACA,IAAKC,EAAYC,GAAiB9F,EAAK,QAACC,SAASuF,GAUjD,MAAO,CACLK,aACAE,SAXcC,IACdF,EAAeG,IACb,IAAI9G,EAAMV,OAAOsE,KAAKiD,GAAO,GACzBvE,EAAQhD,OAAOyH,OAAOF,GAAO,GAC7BG,EAAmB,IAAKF,GAE5B,OADAE,EAAiBhH,GAAOsC,EACjB0E,GAEX,EAIA,aClBF,SAAkBC,GAChB,MAAMC,EAAoB,CACxBC,SAAUC,EAAcH,GAASE,SACjCE,OAAQD,EAAcH,GAASI,OAC/BC,OAAQF,EAAcH,GAASK,OAC/BtB,WAAYoB,EAAcH,GAASjB,YAG/BuB,EAAmB,CACvBF,OAASJ,GAAWA,EAAQI,QAAW,CAAE,EACzCF,SAAWF,GAAWA,EAAQE,UAAa,CAAA,EAC3CG,OAAQ,GACRtB,WAAaiB,GAAWA,EAAQjB,YAAe,CAC7CwB,KAAM,EACNjH,KAAM,KAIV,IAAKkH,EAAOC,GAAY7G,EAAK,QAACC,SAASoG,IAClCS,EAAWC,GAAgB/G,UAAMC,SAASoG,GAO/C,SAASE,EAAcH,GACrB,MAAO,CACLE,SACEF,GAAWA,EAAQE,SACfU,EAAcZ,EAAQE,SAAS7E,OAC/B,GACN+E,OACEJ,GAAWA,EAAQI,OAASQ,EAAcZ,EAAQI,OAAO/E,OAAS,GACpEgF,OACEL,GAAWA,EAAQK,OAASO,EAAcZ,EAAQK,OAAOhF,OAAS,GACpE0D,WACEiB,GAAWA,EAAQjB,WACf6B,EAAcZ,EAAQjB,WAAW1D,OACjC,iBAEV,CAEA,SAASwF,EAAStI,GAChB,OAAkB,OAAXA,GAAqC,iBAAXA,CACnC,CACA,SAASqI,EAAcrI,GACrB,IAAKA,EAAQ,MAAO,GACpB,MAAMuI,EAAc,GAkBpB,OAjBA,SAASC,EAAIC,EAAKC,GAChB,QADqB,IAALA,IAAAA,EAAQ,KACnBJ,EAASG,GACZ,OAAOF,EAAYI,KAAKD,EAAYE,IAAAA,mBAAmBH,IACzD,MAAMrE,EAAOtE,OAAOsE,KAAKqE,GACzB,IAAK,IAAIjI,KAAO4D,EACd,GAAIkE,EAASG,GAAM,CACjB,IAAII,EAAUH,EAETI,MAAMC,QAAQN,QACXjI,IAAAA,MAFDA,GAAAA,EAIPgI,EAAIC,EAAIjI,GAAMkI,EAAQG,EACxB,CAEF,OAAOJ,CACT,CACAD,CAAIxI,GACGuI,EAAYS,KAAK,IAC1B,CAGA,SAASC,IACP,IAAIC,EAAkB,GAClB9E,EAAOtE,OAAOsE,KAAK6D,GACvB,IAAK,IAAIzH,KAAO4D,EACd8E,EAAkBA,EACdA,IAPYC,EAOmBlB,EAAMzH,IAPV,IAAM2I,EAAMA,GAQvClB,EAAMzH,GARM2I,MAUlB,OAAOD,CACT,CAoEA,SAASE,EAAkB5C,GACzB4B,EAAciB,IAML,IACFC,KAAKC,MAAMD,KAAKE,UAAUH,IAC7B7C,eAGN,CA4BA,MAAO,CACLyB,QACAE,YACAsB,UAzKF,WACEvB,EAASR,GACTU,EAAaL,EACf,EAuKEkB,WACAS,eAhHF,WACE,OAAOT,GACT,EA+GEU,aA9FF,SAAsBC,GA6DtB,IAAuB/B,EA5DrBK,EAAUmB,IAMD,IACFC,KAAKC,MAAMD,KAAKE,UAAUH,IAC7BxB,OAAQQ,EAAcuB,EAAY9G,OAClC0D,WAAY,YAmDKqB,EAhDP+B,EAiDdxB,EAAciB,IAML,IACFC,KAAKC,MAAMD,KAAKE,UAAUH,IAC7BxB,YAxDJuB,EAAkB,CAAEpB,KAAM,EAAGjH,KAAM,IACrC,EAgFE8I,iBA/EF,SAA0B7B,EAAUjH,YAAViH,IAAAA,EAAO,YAAGjH,IAAAA,EAAO,IACzCmH,EAAUmB,IAMD,IACFC,KAAKC,MAAMD,KAAKE,UAAUH,IAC7B7C,WAAY6B,EAAc,CAAEL,OAAMjH,YAGtCqI,EAAkB,CAChBpB,OACAjH,QAEJ,EAgEE+I,aA/DF,SAAsBC,GACpB7B,EAAUmB,IAMD,IACFC,KAAKC,MAAMD,KAAKE,UAAUH,IAC7BvB,OAAQO,EAAc0B,EAAYjH,OAClC0D,WAAY,YAGhB4C,EAAkB,CAAEpB,KAAM,EAAGjH,KAAM,IACrC,EAkDEiJ,eAjHF,SAAwBC,GA0FxB,IAAyBtC,EAzFvBO,EAAUmB,IAMD,IACFC,KAAKC,MAAMD,KAAKE,UAAUH,IAC7B1B,SAAUU,EAAc4B,EAAcnH,OACtC0D,WAAY,YAgFOmB,EA7EPsC,EA8EhB7B,EAAciB,IAML,IACFC,KAAKC,MAAMD,KAAKE,UAAUH,IAC7B1B,cArFJyB,EAAkB,CAAEpB,KAAM,EAAGjH,KAAM,IACrC,EAoGF"}