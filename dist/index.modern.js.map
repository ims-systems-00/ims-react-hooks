{"version":3,"file":"index.modern.js","sources":["../src/hooks/useBuildQueryString.js","../src/hooks/useForm.js","../src/hooks/useDualStateController.js","../src/hooks/usePaginationState.js","../src/hooks/useProcessing.js","../src/hooks/useClipboard.js"],"sourcesContent":["import React from \"react\";\n\nfunction useBuildQueryString(initial) {\n  const initialQueryState = {\n    required: _buildDefault(initial).required,\n    filter: _buildDefault(initial).filter,\n    search: _buildDefault(initial).search,\n    pagination: _buildDefault(initial).pagination,\n  };\n\n  const initialToolState = {\n    filter: (initial && initial.filter) || {},\n    required: (initial && initial.required) || {},\n    search: (initial && initial.search) || {},\n    pagination: (initial && initial.pagination) || {\n      page: 1,\n      size: 10,\n    },\n  };\n\n  let [query, setQuery] = React.useState(initialQueryState);\n  let [toolState, setToolState] = React.useState(initialToolState);\n\n  function fullReset() {\n    setQuery(initialQueryState);\n    setToolState(initialToolState);\n  }\n\n  function _buildDefault(initial) {\n    return {\n      required:\n        initial && initial.required\n          ? objectToQuery(initial.required.value)\n          : \"\",\n      filter:\n        initial && initial.filter ? objectToQuery(initial.filter.value) : \"\",\n      search:\n        initial && initial.search ? objectToQuery(initial.search.value) : \"\",\n      pagination:\n        initial && initial.pagination\n          ? objectToQuery(initial.pagination)\n          : objectToQuery({\n              page: 1,\n              size: 10,\n            }),\n    };\n  }\n\n  function isObject(object) {\n    return object !== null && typeof object === \"object\";\n  }\n  function objectToQuery(object) {\n    if (!object) return \"\";\n    const queryBucket = [];\n    function dig(obj, build = \"\") {\n      if (!isObject(obj))\n        return queryBucket.push(build + `=${encodeURIComponent(obj)}`);\n      const keys = Object.keys(obj);\n      for (let key of keys) {\n        if (isObject(obj)) {\n          let attach = !build\n            ? `${key}`\n            : !Array.isArray(obj)\n            ? `[${key}]`\n            : `[]`;\n          dig(obj[key], build + attach);\n        }\n      }\n      return obj;\n    }\n    dig(object);\n    return queryBucket.join(\"&\");\n  }\n  let formatString = (str) => (str ? \"&\" + str : str);\n  // getQuery function will soon be deprecated. it's renamed to getQueryString\n  function getQuery() {\n    let processedString = \"\";\n    let keys = Object.keys(query);\n    for (let key of keys) {\n      processedString = processedString\n        ? processedString + formatString(query[key])\n        : query[key];\n    }\n    return processedString;\n  }\n  function getQueryString() {\n    return getQuery();\n  }\n  function handleRequired(requiredQuery) {\n    setQuery((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        required: objectToQuery(requiredQuery.value),\n        pagination: objectToQuery({\n          page: 1,\n          size: toolState?.pagination?.size,\n        }),\n      };\n    });\n    _updateRequired(requiredQuery);\n    _updatePagination({ page: 1, size: 10 });\n  }\n  function handleFilter(filterQuery) {\n    setQuery((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        filter: objectToQuery(filterQuery.value),\n        pagination: objectToQuery({\n          page: 1,\n          size: toolState?.pagination?.size,\n        }),\n      };\n    });\n    _updateFilter(filterQuery);\n    _updatePagination({ page: 1, size: toolState?.pagination?.size });\n  }\n  function handlePagination(page = 1, size = 10) {\n    setQuery((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        pagination: objectToQuery({ page, size }),\n      };\n    });\n    _updatePagination({\n      page,\n      size,\n    });\n  }\n  function handleSearch(searchQuery) {\n    setQuery((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        search: objectToQuery(searchQuery.value),\n        pagination: objectToQuery({\n          page: 1,\n          size: toolState?.pagination?.size,\n        }),\n      };\n    });\n    _updateSearch(searchQuery);\n    _updatePagination({ page: 1, size: toolState?.pagination?.size });\n  }\n  function _updatePagination(pagination) {\n    setToolState((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        pagination,\n      };\n    });\n  }\n  function _updateFilter(filter) {\n    setToolState((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        filter,\n      };\n    });\n  }\n  function _updateRequired(required) {\n    setToolState((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        required,\n      };\n    });\n  }\n  function _updateSearch(search) {\n    setToolState((prevState) => {\n      /**\n       * I'm using JSON to avoid object mutation, this is used only for performence.\n       * Date, function, Infinity , Maps , Blobs are not cloned. So be mindfull of using,\n       * basic and simple objects in state.\n       */\n      return {\n        ...JSON.parse(JSON.stringify(prevState)),\n        search,\n      };\n    });\n  }\n  return {\n    query,\n    toolState,\n    fullReset,\n    getQuery,\n    getQueryString,\n    handleFilter,\n    handlePagination,\n    handleSearch,\n    handleRequired,\n  };\n}\n\nexport default useBuildQueryString;\n","import * as yup from \"yup\";\nimport React from \"react\";\nconst byString = function (object, accessString) {\n  accessString = accessString.replace(/\\[(\\w+)\\]/g, \".$1\");\n  accessString = accessString.replace(/^\\./, \"\");\n  let accessKeys = accessString.split(\".\");\n  for (let i = 0, n = accessKeys.length; i < n; ++i) {\n    let key = accessKeys[i];\n    if (key in object) {\n      object = object[key];\n    } else {\n      return;\n    }\n  }\n  return object;\n};\nObject.byString = byString;\nconst useForm = (initdataModel, schema) => {\n  const [dataModel, setDataModel] = React.useState(initdataModel);\n  const [validationErrors, setValidationErrors] = React.useState({});\n  const [isBusy, setIsBusy] = React.useState(false);\n  const validate = async () => {\n    const options = { abortEarly: false };\n    const errors = {};\n    try {\n      await schema.validate(dataModel, options);\n      return null;\n    } catch (err) {\n      err.inner.forEach((item) => {\n        errors[item.path] = item.message;\n      });\n      return errors;\n    }\n  };\n  const validateProperty = async (field, value) => {\n    const errors = { ...validationErrors };\n    try {\n      const objSchema = yup.reach(schema, field);\n      await objSchema.validate(value);\n      /**\n       * if reached this block after promise it means validation success.\n       * remove the errors if there is any regarding this field.\n       */\n      delete errors[field];\n    } catch (err) {\n      /**\n       * invalid input detected. update with proper error message on the\n       * respective field.\n       */\n      errors[field] = err.message;\n    } finally {\n      /**\n       * finally we are just setting the erros to state.\n       */\n      setValidationErrors(errors);\n    }\n  };\n  const handleSubmit = async (e, doSubmit, reset = true, options = {}) => {\n    e.preventDefault();\n    const errors = await validate();\n    if (errors) return setValidationErrors(errors);\n    // Form submission logic here ....\n    function submission() {\n      return new Promise(async (resolve, reject) => {\n        try {\n          await doSubmit(dataModel, e);\n          if (reset) resetForm();\n          return resolve();\n        } catch (err) {\n          return reject(err);\n        }\n      });\n    }\n    try {\n      setIsBusy(true);\n      await submission();\n    } catch (err) {\n      console.log(err);\n    }\n    setIsBusy(false);\n  };\n  const handleChange = ({ field, value }) => {\n    const data = { ...dataModel };\n    data[field] = value;\n    setDataModel(data);\n    validateProperty(field, value);\n  };\n  const resetForm = () => {\n    setDataModel(initdataModel);\n    setValidationErrors({});\n  };\n  const _isObject = (object) => object !== null && typeof object === \"object\";\n  const _deepEqual = (referenceObject, testObject) => {\n    const referenceKeys = Object.keys(referenceObject);\n    const testKeys = Object.keys(testObject);\n    if (referenceKeys.length !== testKeys.length) return false;\n    for (const key of referenceKeys) {\n      const referenceValue = referenceObject[key];\n      const testValue = testObject[key];\n      const hasProperties = _isObject(referenceValue);\n      if (!hasProperties && referenceValue !== testValue) return false;\n      if (hasProperties && !_deepEqual(referenceValue, testValue)) return false;\n    }\n    return true;\n  };\n  const hasUnsavedData = () => !_deepEqual(initdataModel, dataModel);\n  const isFormValid = () => Object.keys(validationErrors).length === 0;\n  React.useEffect(() => {\n    console.log(\"datamodel\", dataModel);\n    console.log(\"validation error:\", validationErrors);\n  }, [dataModel, validationErrors]);\n  /** validation runner is required the first time the form renders. */\n  React.useEffect(() => {\n    // (async function () {\n    //   const errors = await validate();\n    //   if (errors) return setValidationErrors(errors);\n    // })();\n  }, []);\n  function initiateDataModel(dataModel) {\n    setDataModel(dataModel);\n  }\n  return {\n    dataModel,\n    validationErrors,\n    isBusy,\n    handleChange,\n    handleSubmit,\n    initiateDataModel,\n    isFormValid,\n    resetForm,\n    hasUnsavedData,\n  };\n};\nexport default useForm;\n","import React from \"react\";\n\nconst useDualStateController = () => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const toggle = () => {\n    setIsOpen((isOpen) => !isOpen);\n  };\n  return {\n    isOpen,\n    toggle,\n  };\n};\n\nexport default useDualStateController;\n","import { useState } from \"react\";\n/**\n * CAUTION: Changing the object strucuture will break the UI if not handled properly.\n * Consult with seniors before making changes.\n */\nconst defaultPaginationState = {\n  currentPage: 1,\n  hasNextPage: false,\n  hasPrevPage: false,\n  nextPage: null,\n  prevPage: null,\n  size: 10,\n  totalPages: 0,\n  totalResults: 0,\n};\nconst usePagination = () => {\n  const [pagination, setPagination] = useState(defaultPaginationState);\n  function updatePaginaion(pagination = defaultPaginationState) {\n    if (typeof pagination.currentPage !== \"number\")\n      throw new Error(\"currentPage must be a number\");\n    if (typeof pagination.hasNextPage !== \"boolean\")\n      throw new Error(\"currentPage must be a number\");\n    if (typeof pagination.hasPrevPage !== \"boolean\")\n      throw new Error(\"hasPrevPage must be a boolean\");\n    if (typeof pagination.nextPage !== \"number\" && pagination.nextPage !== null)\n      throw new Error(\"nextPage must be a number or null\");\n    if (typeof pagination.prevPage !== \"number\" && pagination.prevPage !== null)\n      throw new Error(\"prevPage must be a number or null\");\n    if (typeof pagination.size !== \"number\")\n      throw new Error(\"size must be a number\");\n    if (typeof pagination.totalPages !== \"number\")\n      throw new Error(\"totalPages must be a number\");\n    if (typeof pagination.totalResults !== \"number\")\n      throw new Error(\"totalResults must be a number\");\n    setPagination(pagination);\n  }\n  return {\n    pagination,\n    updatePaginaion,\n  };\n};\n\nexport default usePagination;\n","import React from \"react\";\n\nconst useProcessing = (initializers) => {\n  let initState = {};\n  initializers.forEach((process) => {\n    initState[process.action] = { status: process.status, id: null };\n  });\n  let [processing, setProcessing] = React.useState(initState);\n  let dispatch = (state) => {\n    setProcessing((currentProcesses) => {\n      let key = Object.keys(state)[0];\n      let value = Object.values(state)[0];\n      let updatedProcesses = { ...currentProcesses };\n      updatedProcesses[key] = value;\n      return updatedProcesses;\n    });\n  };\n  return {\n    processing,\n    dispatch,\n  };\n};\n\nexport default useProcessing;\n","import React from \"react\";\nconst SUCCESS_TIMEOUT = 2500;\nconst useClipboard = () => {\n  const [copySuccess, setCopySuccess] = React.useState(false);\n  const contentElementReference = React.useRef(null);\n  async function copyFormatedToClipboard() {\n    if (contentElementReference.current) {\n      /** create a range to select contents that will be copied. */\n      // const range = document.createRange();\n      // range.selectNodeContents(contentElementReference.current);\n      /** copy the contents to clipboard. */\n      if (navigator.clipboard) {\n        try {\n          await navigator.clipboard.write([\n            new ClipboardItem({\n              \"text/html\": new Blob(\n                [contentElementReference.current.innerHTML],\n                {\n                  type: \"text/html\",\n                }\n              ),\n            }),\n          ]);\n          setCopySuccess(true);\n          console.log(\"Contentns copied.\");\n        } catch (err) {\n          console.log(\"Error copying to clipboard.\");\n          console.log(err);\n        }\n        setTimeout(() => setCopySuccess(false), SUCCESS_TIMEOUT);\n      }\n    }\n  }\n  async function copyPlainTextToClipBoard(value, cb = () => {}) {\n    if (navigator.clipboard) {\n      setCopySuccess(true);\n      await navigator.clipboard.writeText(value);\n      setTimeout(() => setCopySuccess(false), SUCCESS_TIMEOUT);\n    }\n  }\n  return {\n    contentElementReference,\n    copySuccess,\n    copyFormatedToClipboard,\n    copyPlainTextToClipBoard,\n  };\n};\n\nexport default useClipboard;\n"],"names":["useBuildQueryString","initial","initialQueryState","required","_buildDefault","filter","search","pagination","initialToolState","page","size","query","setQuery","React","useState","toolState","setToolState","objectToQuery","value","isObject","object","queryBucket","dig","obj","build","push","encodeURIComponent","keys","Object","key","attach","Array","isArray","join","getQuery","processedString","str","_updatePagination","prevState","JSON","parse","stringify","fullReset","getQueryString","handleFilter","filterQuery","_toolState$pagination3","_toolState$pagination2","handlePagination","handleSearch","searchQuery","_toolState$pagination5","_toolState$pagination4","handleRequired","requiredQuery","_toolState$pagination","_catch","body","recover","result","e","then","byString","accessString","accessKeys","replace","split","i","n","length","useForm","initdataModel","schema","dataModel","setDataModel","validationErrors","setValidationErrors","isBusy","setIsBusy","resetForm","_deepEqual","referenceObject","testObject","referenceKeys","testKeys","referenceValue","testValue","hasProperties","useEffect","console","log","handleChange","_ref","field","data","validateProperty","errors","_temp","finalizer","objSchema","yup","reach","Promise","resolve","validate","err","message","bind","_finallyRethrows","_wasThrown","_result","reject","handleSubmit","doSubmit","reset","options","preventDefault","abortEarly","inner","forEach","item","path","_temp3","_temp2","initiateDataModel","isFormValid","hasUnsavedData","useDualStateController","isOpen","setIsOpen","toggle","defaultPaginationState","currentPage","hasNextPage","hasPrevPage","nextPage","prevPage","totalPages","totalResults","usePagination","setPagination","updatePaginaion","Error","useProcessing","initializers","initState","process","action","status","id","processing","setProcessing","dispatch","state","currentProcesses","values","updatedProcesses","useClipboard","copySuccess","setCopySuccess","contentElementReference","useRef","copyFormatedToClipboard","_temp4","current","navigator","clipboard","setTimeout","write","ClipboardItem","Blob","innerHTML","type","copyPlainTextToClipBoard","cb","_temp5","writeText"],"mappings":"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"}